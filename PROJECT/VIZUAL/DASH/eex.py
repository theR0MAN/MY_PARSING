import time
import datetime
from PROJECT.SBOR.my_lib  import *

# z=G:\DATA_SBOR\MOSCOWEXCH\FINAM\ASYMBOLS_INFO\2024\1
# z="G:\\DATA_SBOR\\MOSCOWEXCH\\FINAM\\FRTS2\\2024\\1\\5\\8stk.roman"
# x = z.split('\\')
# spinst = len(x)
# year = int(x[spinst - 4])
# print(year)
# mon = int(x[spinst - 3])
# print(mon)
# day = int(x[spinst - 2])
# print(day)
# hr = int(x[spinst - 1].split('.')[0][:-3])
# print("hr=  ",hr)
# tm = int(time.mktime(datetime.datetime(year, mon, day, hr).timetuple()))
# CoG4 {'custom': False, 'chart_mode': 1, 'select': True, 'visible': True,
# 	  'session_deals': 0, 'session_buy_orders': 0, 'session_sell_orders': 0,
# 	  'volume': 0, 'volumehigh': 0, 'volumelow': 0, 'time': 1704412219,
# 	  'digits': 1, 'spread': 11205, 'spread_float': True, 'ticks_bookdepth': 32,
# 	  'trade_calc_mode': 33, 'trade_mode': 4, 'start_time': 0, 'expiration_time': 1708455000,
# 	  'trade_stops_level': 0, 'trade_freeze_level': 0, 'trade_exemode': 3, 'swap_mode': 0,
# 	  'swap_rollover3days': 3, 'margin_hedged_use_leg': False, 'expiration_mode': 1, 'filling_mode': 3,
# 	  'order_mode': 63, 'order_gtc_mode': 0, 'option_mode': 0, 'option_right': 0, 'bid': 8001.0,
# 	  'bidhigh': 8181.5, 'bidlow': 7400.0, 'ask': 9121.5, 'askhigh': 9124.0, 'asklow': 8438.0,
# 	  'last': 0.0, 'lasthigh': 0.0, 'lastlow': 0.0, 'volume_real': 0.0, 'volumehigh_real': 0.0,
# 	  'volumelow_real': 0.0, 'option_strike': 0.0, 'point': 0.1, 'trade_tick_value': 4.56454,
# 	  'trade_tick_value_profit': 4.56454, 'trade_tick_value_loss': 4.56454, 'trade_tick_size': 0.5,
# 	  'trade_contract_size': 1.0, 'trade_accrued_interest': 0.0, 'trade_face_value': 0.0,
# 	  'trade_liquidity_rate': 1.0, 'volume_min': 1.0, 'volume_max': 100000000.0,
# 	  'volume_step': 1.0, 'volume_limit': 0.0, 'swap_long': 0.0, 'swap_short': 0.0,
# 	  'margin_initial': 78103.84, 'margin_maintenance': 78103.84, 'session_volume': 0.0,
# 	  'session_turnover': 0.0, 'session_interest': 0.0, 'session_buy_orders_volume': 0.0,
# 	  'session_sell_orders_volume': 0.0, 'session_open': 0.0, 'session_close': 0.0, 'session_aw': 0.0,
# 	  'session_price_settlement': 0.0, 'session_price_limit_min': 0.0, 'session_price_limit_max': 0.0,
# 	  'margin_hedged': 0.0, 'price_change': 0.0, 'price_volatility': 0.0, 'price_theoretical': 0.0,
# 	  'price_greeks_delta': 0.0, 'price_greeks_theta': 0.0, 'price_greeks_gamma': 0.0, 'price_greeks_vega': 0.0,
# 	  'price_greeks_rho': 0.0, 'price_greeks_omega': 0.0, 'price_sensitivity': 0.0,
# 	  'basis': '', 'category': '', 'currency_base': 'RUR', 'currency_profit': 'RUR',
# 	  'currency_margin': 'RUR', 'bank': '', 'description': 'Фьючерсный контракт Co-2.24',
# 	  'exchange': 'ФОРТС', 'formula': '', 'isin': 'moex.fut', 'name': 'CoG4', 'page': '', 'path': 'MFUT\\CoG4'}


# •Январь - F
# •Февраль - G
# •Март - H
# •Апрель - J
# •Май - K
# •Июнь - M
# •Июль - N
# •Август - Q
# •Сентябрь - U
# •Октябрь - V
# •Ноябрь - X
# •Декабрь - Z


markets = ['FRTS2'] 


infopath='G:\\SYMBOLS_INFO\\MOEXSYMBOLS_INFO'

year=2024
month=1
day=5

# MN
example ={'AEH4': 1711047000, 'AEM4': 1718909400, 'AEU4': 1726771800, 'AEZ3': 1703184600, 'AFH4': 1711047000, 'AFM4': 1718909400, 'AFZ3': 1703184600, 'AKH4': 1711047000, 'AKZ3': 1703184600, 'ALH4': 1711047000, 'ALM4': 1718909400, 'ALZ3': 1703184600, 'AMH4': 1710874200, 'AMX3': 1699987800, 'AMZ3': 1703011800, 'ARH4': 1711047000, 'ARM4': 1718909400, 'ARU4': 1726771800, 'ARZ3': 1703184600, 'AUH4': 1711047000, 'AUZ3': 1703184600, 'BEH4': 1711047000, 'BEM4': 1718909400, 'BEU4': 1726771800, 'BEZ3': 1703184600, 'BNH4': 1711047000, 'BNM4': 1718909400, 'BNU4': 1726771800, 'BNZ3': 1703184600, 'BRF4': 1703875800, 'BRG4': 1706813400, 'BRH4': 1709319000, 'BRJ4': 1711997400, 'BRK4': 1714675800, 'BRM4': 1717440600, 'BRN4': 1719859800, 'BRQ4': 1722538200, 'BRU4': 1725303000, 'BRV4': 1727808600, 'BRX3': 1698864600, 'BRZ3': 1701456600, 'BSH4': 1711047000, 'BSM4': 1718909400, 'BSU4': 1726771800, 'BSZ3': 1703184600, 'CAH4': 1711047000, 'CAZ3': 1703184600, 'CFH4': 1711047000, 'CFZ3': 1703184600, 'CHH4': 1711047000, 'CHZ3': 1703184600, 'CMH4': 1711047000, 'CMM4': 1718909400, 'CMU4': 1726771800, 'CMZ3': 1703184600, 'CNYRUBF': 4102512600, 'CRH4': 1711047000, 'CRH5': 1742496600, 'CRM4': 1718909400, 'CRU4': 1726771800, 'CRZ3': 1703184600, 'CRZ4': 1734634200, 'CSH4': 1711047000, 'CSZ3': 1703184600, 'CoF4': 1705431000, 'CoX3': 1699987800, 'CoZ3': 1703011800, 'DXH4': 1710528600, 'DXM4': 1718995800, 'DXU4': 1726858200, 'DXZ3': 1702666200, 'ECH4': 1711047000, 'ECZ3': 1703184600, 'EDH4': 1711047000, 'EDM4': 1718909400, 'EDZ3': 1703184600, 'EGH4': 1711047000, 'EGZ3': 1703184600, 'EJH4': 1711047000, 'EJZ3': 1703184600, 'EURRUBF': 4102512600, 'EuH4': 1711047000, 'EuH5': 1742496600, 'EuM4': 1718909400, 'EuU4': 1726771800, 'EuZ3': 1703184600, 'EuZ4': 1734634200, 'FLH4': 1711047000, 'FLM4': 1718909400, 'FLU4': 1726771800, 'FLZ3': 1703184600, 'FNH4': 1711047000, 'FNZ3': 1703184600, 'FSH4': 1711047000, 'FSZ3': 1703184600, 'FVZ3': 1703184600, 'GDH4': 1711133400, 'GDM4': 1718995800, 'GDU4': 1726858200, 'GDZ3': 1703271000, 'GKH4': 1711047000, 'GKM4': 1718909400, 'GKZ3': 1703184600, 'GLDRUBF': 4102512600, 'GLH4': 1711047000, 'GLM4': 1718909400, 'GLU4': 1726771800, 'GLZ3': 1703184600, 'GUH4': 1711047000, 'GUZ3': 1703184600, 'GZH4': 1711047000, 'GZH5': 1742496600, 'GZH6': 1773946200, 'GZM4': 1718909400, 'GZM5': 1750359000, 'GZM6': 1781808600, 'GZU4': 1726771800, 'GZU5': 1758221400, 'GZZ3': 1703184600, 'GZZ4': 1734634200, 'GZZ5': 1766083800, 'HKH4': 1711047000, 'HKM4': 1718909400, 'HKU4': 1726771800, 'HKZ3': 1703184600, 'HOH4': 1710960600, 'HOM4': 1718823000, 'HOZ3': 1703098200, 'HSH4': 1710528600, 'HSM4': 1718995800, 'HSU4': 1726858200, 'HSZ3': 1702666200, 'HYH4': 1711047000, 'HYZ3': 1703184600, 'I2H4': 1711047000, 'I2M4': 1718909400, 'I2U4': 1726771800, 'I2Z3': 1703184600, 'IRH4': 1711047000, 'IRZ3': 1703184600, 'ISH4': 1711047000, 'ISZ3': 1703184600, 'JPH4': 1711047000, 'JPZ3': 1703184600, 'KMH4': 1711047000, 'KMM4': 1718909400, 'KMU4': 1726771800, 'KMZ3': 1703184600, 'KZH4': 1711047000, 'KZM4': 1718909400, 'KZU4': 1726771800, 'KZZ3': 1703184600, 'LKH4': 1711047000, 'LKM4': 1718909400, 'LKU4': 1726771800, 'LKZ3': 1703184600, 'MAH4': 1711047000, 'MAZ3': 1703184600, 'MCH4': 1711047000, 'MCZ3': 1703184600, 'MEH4': 1711047000, 'MEZ3': 1703184600, 'MFF4': 1706727000, 'MFG4': 1709232600, 'MFH4': 1711738200, 'MFJ4': 1714503000, 'MFK4': 1717181400, 'MFM4': 1719600600, 'MFN4': 1722451800, 'MFQ4': 1725043800, 'MFU4': 1727722200, 'MFV3': 1698778200, 'MFX3': 1701370200, 'MFZ3': 1703875800, 'MGH4': 1711047000, 'MGZ3': 1703184600, 'MMH4': 1711047000, 'MMH5': 1742496600, 'MMH6': 1773946200, 'MMM4': 1718909400, 'MMM5': 1750359000, 'MMM6': 1781808600, 'MMU4': 1726771800, 'MMU5': 1758221400, 'MMU6': 1789671000, 'MMZ3': 1703184600, 'MMZ4': 1734634200, 'MMZ5': 1766083800, 'MMZ6': 1797533400, 'MMZ7': 1828983000, 'MNH4': 1711047000, 'MNM4': 1718909400, 'MNZ3': 1703184600, 'MTH4': 1711047000, 'MTM4': 1718909400, 'MTZ3': 1703184600, 'MVH4': 1711047000, 'MVM4': 1718909400, 'MVU4': 1726771800, 'MVZ3': 1703184600, 'MXH4': 1711047000, 'MXM4': 1718909400, 'MXU4': 1726771800, 'MXZ3': 1703184600, 'N2H4': 1710528600, 'N2M4': 1718995800, 'N2U4': 1726858200, 'N2Z3': 1702666200, 'NAH4': 1710528600, 'NAM4': 1718995800, 'NAU4': 1726858200, 'NAZ3': 1702666200, 'NGF4': 1706554200, 'NGG4': 1709059800, 'NGH4': 1711479000, 'NGX3': 1701197400, 'NGZ3': 1703703000, 'NKH4': 1711047000, 'NKZ3': 1703184600, 'NMH4': 1711047000, 'NMM4': 1718909400, 'NMZ3': 1703184600, 'NlF4': 1705431000, 'NlX3': 1699987800, 'NlZ3': 1703011800, 'OGH4': 1711047000, 'OGZ3': 1703184600, 'OZZ3': 1703184600, 'PDH4': 1711133400, 'PDM4': 1718995800, 'PDZ3': 1703271000, 'PHH4': 1711047000, 'PHZ3': 1703184600, 'PIH4': 1711047000, 'PIZ3': 1703184600, 'POZ3': 1703184600, 'PSH4': 1711047000, 'PSZ3': 1703184600, 'PTH4': 1711133400, 'PTM4': 1718995800, 'PTZ3': 1703271000, 'PZH4': 1711047000, 'PZZ3': 1703184600, 'RBH4': 1709319000, 'RBZ3': 1701456600, 'RIH4': 1711047000, 'RIH5': 1742496600, 'RIM4': 1718909400, 'RIM5': 1750359000, 'RIU4': 1726771800, 'RIU5': 1758221400, 'RIZ3': 1703184600, 'RIZ4': 1734634200, 'RLH4': 1711047000, 'RLZ3': 1703184600, 'RMH4': 1711047000, 'RMM4': 1718909400, 'RMU4': 1726771800, 'RMZ3': 1703184600, 'RNH4': 1711047000, 'RNH5': 1742496600, 'RNH6': 1773946200, 'RNM4': 1718909400, 'RNM5': 1750359000, 'RNM6': 1781808600, 'RNU4': 1726771800, 'RNU5': 1758221400, 'RNZ3': 1703184600, 'RNZ4': 1734634200, 'RNZ5': 1766083800, 'RRF4': 1706727000, 'RRG4': 1709232600, 'RRH4': 1711738200, 'RRJ4': 1714503000, 'RRK4': 1717181400, 'RRM4': 1719600600, 'RRN4': 1722451800, 'RRQ4': 1725043800, 'RRU4': 1727722200, 'RRV3': 1698778200, 'RRX3': 1701370200, 'RRZ3': 1703875800, 'RTH4': 1711047000, 'RTZ3': 1703184600, 'SAH4': 1709232600, 'SAK4': 1714503000, 'SEH4': 1711047000, 'SEZ3': 1703184600, 'SFH4': 1710528600, 'SFM4': 1718995800, 'SFU4': 1726858200, 'SFZ3': 1702666200, 'SGH4': 1711047000, 'SGZ3': 1703184600, 'SNH4': 1711047000, 'SNZ3': 1703184600, 'SOH4': 1711047000, 'SOZ3': 1703184600, 'SPH4': 1711047000, 'SPZ3': 1703184600, 'SRH4': 1711047000, 'SRM4': 1718909400, 'SRU4': 1726771800, 'SRZ3': 1703184600, 'SSH4': 1711047000, 'SSZ3': 1703184600, 'SVH4': 1711133400, 'SVM4': 1718995800, 'SVU4': 1726858200, 'SVZ3': 1703271000, 'SXH4': 1710528600, 'SXM4': 1718995800, 'SXU4': 1726858200, 'SXZ3': 1702666200, 'SZH4': 1711047000, 'SZM4': 1718909400, 'SZU4': 1726771800, 'SZZ3': 1703184600, 'SiH4': 1711047000, 'SiH5': 1742496600, 'SiM4': 1718909400, 'SiM5': 1750359000, 'SiU4': 1726771800, 'SiU5': 1758221400, 'SiZ3': 1703184600, 'SiZ4': 1734634200, 'SuF4': 1705344600, 'SuG4': 1708023000, 'SuH4': 1710528600, 'SuJ4': 1713207000, 'SuX3': 1700074200, 'SuZ3': 1702666200, 'TIZ3': 1703184600, 'TNZ3': 1703184600, 'TRH4': 1711047000, 'TRZ3': 1703184600, 'TTH4': 1711047000, 'TTM4': 1718909400, 'TTZ3': 1703184600, 'TYH4': 1711047000, 'TYM4': 1718909400, 'TYU4': 1726771800, 'TYZ3': 1703184600, 'UCH4': 1711047000, 'UCM4': 1718909400, 'UCU4': 1726771800, 'UCZ3': 1703184600, 'USDRUBF': 4102512600, 'VBH4': 1711047000, 'VBM4': 1718909400, 'VBZ3': 1703184600, 'VIX3': 1700160600, 'VIZ3': 1703184600, 'W4F4': 1706727000, 'W4G4': 1709232600, 'W4H4': 1711738200, 'W4J4': 1714503000, 'W4K4': 1717181400, 'W4M4': 1719600600, 'W4N4': 1722451800, 'W4Q4': 1725043800, 'W4U4': 1727722200, 'W4V3': 1698778200, 'W4X3': 1701370200, 'W4Z3': 1703875800, 'WUH4': 1711047000, 'WUM4': 1718909400, 'WUU4': 1726771800, 'WUZ3': 1703184600, 'YNH4': 1711047000, 'YNZ3': 1703184600, 'ZnH4': 1710874200, 'ZnX3': 1699987800, 'ZnZ3': 1703011800, 'W4V4': 1730400600, 'NGJ4': 1714157400, 'VKH4': 1711047000, 'VKZ3': 1703184600, 'VKM4': 1718909400, 'VKU4': 1726771800, 'BRX4': 1730487000, 'RRV4': 1730400600, 'CoG4': 1708455000, 'NlG4': 1708455000, 'MFV4': 1730400600, 'VIF4': 1705603800, 'SuK4': 1715799000, 'POH4': 1711047000, 'IMOEXF': 4102512600, 'TNH4': 1706899800, 'W4X4': 1732906200, 'RBM4': 1717440600, 'NGK4': 1717008600, 'BRZ4': 1733165400, 'RRX4': 1732906200, 'MFX4': 1732906200, 'CoH4': 1710874200, 'NlH4': 1710874200, 'ZnM4': 1718736600, 'AMM4': 1718736600, 'FVH4': 1711047000, 'TIH4': 1711047000, 'OZH4': 1711047000, 'CHM4': 1718909400, 'HYM4': 1718909400, 'LKZ4': 1734634200, 'MTU4': 1726771800, 'NKM4': 1718909400, 'PZM4': 1718909400, 'SPM4': 1718909400, 'SRZ4': 1734634200, 'SNM4': 1718909400, 'TTU4': 1726771800, 'VBU4': 1726771800, 'RTM4': 1718909400, 'FSM4': 1718909400, 'SGM4': 1718909400, 'RLM4': 1718909400, 'MNU4': 1726771800, 'MEM4': 1718909400, 'NMU4': 1726771800, 'ALU4': 1726771800, 'AFU4': 1726771800, 'MGM4': 1718909400, 'AKM4': 1718909400, 'IRM4': 1718909400, 'POM4': 1718909400, 'PIM4': 1718909400, 'HOU4': 1726685400, 'MCM4': 1718909400, 'PHM4': 1718909400, 'SOM4': 1718909400, 'SSM4': 1718909400, 'SEM4': 1718909400, 'PSM4': 1718909400, 'HSZ4': 1734720600, 'SXZ4': 1734720600, 'DXZ4': 1734720600, 'N2Z4': 1734720600, 'BEZ4': 1734634200, 'FLZ4': 1734634200, 'SZZ4': 1734634200, 'WUZ4': 1734634200, 'BNZ4': 1734634200, 'BSZ4': 1734634200, 'CMZ4': 1734634200, 'KMZ4': 1734634200, 'MVZ4': 1734634200, 'VKZ4': 1734634200, 'EDU4': 1726771800, 'GDZ4': 1734720600, 'PDU4': 1726858200, 'PTU4': 1726858200, 'SVZ4': 1734720600, 'AUM4': 1718909400, 'GUM4': 1718909400, 'MXZ4': 1734634200, 'CFM4': 1718909400, 'JPM4': 1718909400, 'VIG4': 1708023000, 'CAM4': 1718909400, 'TRM4': 1718909400, 'ECM4': 1718909400, 'EGM4': 1718909400, 'EJM4': 1718909400, 'CSM4': 1718909400, 'FNM4': 1718909400, 'MAM4': 1718909400, 'OGM4': 1718909400, 'CRM5': 1750359000, 'UCZ4': 1734634200, 'HKZ4': 1734634200, 'TYZ4': 1734634200, 'AEZ4': 1734634200, 'I2Z4': 1734634200, 'ISM4': 1718909400, 'ARZ4': 1734634200, 'KZZ4': 1734634200, 'GLZ4': 1734634200, 'SFZ4': 1734720600, 'NAZ4': 1734720600, 'SuM4': 1718391000, 'S0H4': 1711047000, 'S0M4': 1718909400, 'ASM4': 1718909400, 'ASH4': 1711047000, 'EuM5': 1750359000, 'RIZ5': 1766083800, 'SiZ5': 1766083800, 'MMH7': 1805395800, 'RMZ4': 1734634200, 'W4Z4': 1735584600, 'NGM4': 1719427800, 'BRF5': 1735930200, 'RRZ4': 1735584600, 'CoJ4': 1713293400, 'NlJ4': 1713293400, 'MFZ4': 1735584600, 'VIH4': 1711047000}

# все таки список лучше брать без постфиксов
spis=['AEH4*FRTS2', 'AEM4*FRTS2', 'AEU4*FRTS2', 'AFH4*FRTS2', 'AFM4*FRTS2', 'AKH4*FRTS2', 'ALH4*FRTS2', 'ALM4*FRTS2', 'ARH4*FRTS2', 'ARM4*FRTS2', 'ARU4*FRTS2', 'AUH4*FRTS2', 'BEH4*FRTS2', 'BEM4*FRTS2', 'BEU4*FRTS2', 'BNH4*FRTS2', 'BNM4*FRTS2', 'BNU4*FRTS2', 'BRG4*FRTS2', 'BRH4*FRTS2', 'BRJ4*FRTS2', 'BRK4*FRTS2', 'BRM4*FRTS2', 'BRN4*FRTS2', 'BRQ4*FRTS2', 'BRU4*FRTS2', 'BRV4*FRTS2', 'BSH4*FRTS2', 'BSM4*FRTS2', 'BSU4*FRTS2', 'CAH4*FRTS2', 'CFH4*FRTS2', 'CHH4*FRTS2', 'CMH4*FRTS2', 'CMM4*FRTS2', 'CMU4*FRTS2', 'CNYRUBF*FRTS2', 'CRH4*FRTS2', 'CRH5*FRTS2', 'CRM4*FRTS2', 'CRU4*FRTS2', 'CRZ4*FRTS2', 'CSH4*FRTS2', 'CoF4*FRTS2', 'DXH4*FRTS2', 'DXM4*FRTS2', 'DXU4*FRTS2', 'EDH4*FRTS2', 'EDM4*FRTS2', 'EJH4*FRTS2', 'EURRUBF*FRTS2', 'EuH4*FRTS2', 'EuH5*FRTS2', 'EuM4*FRTS2', 'EuU4*FRTS2', 'EuZ4*FRTS2', 'FLH4*FRTS2', 'FLM4*FRTS2', 'FLU4*FRTS2', 'FNH4*FRTS2', 'FSH4*FRTS2', 'GDH4*FRTS2', 'GDM4*FRTS2', 'GDU4*FRTS2', 'GKH4*FRTS2', 'GKM4*FRTS2', 'GLDRUBF*FRTS2', 'GLH4*FRTS2', 'GLM4*FRTS2', 'GLU4*FRTS2', 'GUH4*FRTS2', 'GZH4*FRTS2', 'GZH5*FRTS2', 'GZH6*FRTS2', 'GZM4*FRTS2', 'GZM5*FRTS2', 'GZM6*FRTS2', 'GZU4*FRTS2', 'GZU5*FRTS2', 'GZZ4*FRTS2', 'GZZ5*FRTS2', 'HKH4*FRTS2', 'HKM4*FRTS2', 'HKU4*FRTS2', 'HOH4*FRTS2', 'HOM4*FRTS2', 'HSH4*FRTS2', 'HSM4*FRTS2', 'HSU4*FRTS2', 'HYH4*FRTS2', 'I2H4*FRTS2', 'I2M4*FRTS2', 'I2U4*FRTS2', 'IRH4*FRTS2', 'ISH4*FRTS2', 'JPH4*FRTS2', 'KMH4*FRTS2', 'KMM4*FRTS2', 'KMU4*FRTS2', 'KZH4*FRTS2', 'KZU4*FRTS2', 'LKH4*FRTS2', 'LKM4*FRTS2', 'LKU4*FRTS2', 'MAH4*FRTS2', 'MCH4*FRTS2', 'MEH4*FRTS2', 'MGH4*FRTS2', 'MMH4*FRTS2', 'MMH5*FRTS2', 'MMH6*FRTS2', 'MMM4*FRTS2', 'MMM5*FRTS2', 'MMM6*FRTS2', 'MMU4*FRTS2', 'MMU5*FRTS2', 'MMU6*FRTS2', 'MMZ4*FRTS2', 'MMZ5*FRTS2', 'MMZ6*FRTS2', 'MMZ7*FRTS2', 'MNH4*FRTS2', 'MNM4*FRTS2', 'MTH4*FRTS2', 'MTM4*FRTS2', 'MVH4*FRTS2', 'MVM4*FRTS2', 'MVU4*FRTS2', 'MXH4*FRTS2', 'MXM4*FRTS2', 'MXU4*FRTS2', 'N2H4*FRTS2', 'N2M4*FRTS2', 'N2U4*FRTS2', 'NAH4*FRTS2', 'NAM4*FRTS2', 'NAU4*FRTS2', 'NGF4*FRTS2', 'NGG4*FRTS2', 'NGH4*FRTS2', 'NKH4*FRTS2', 'NMH4*FRTS2', 'NMM4*FRTS2', 'NlF4*FRTS2', 'OGH4*FRTS2', 'PDH4*FRTS2', 'PDM4*FRTS2', 'PHH4*FRTS2', 'PIH4*FRTS2', 'PSH4*FRTS2', 'PTH4*FRTS2', 'PTM4*FRTS2', 'PZH4*FRTS2', 'RBH4*FRTS2', 'RIH4*FRTS2', 'RIH5*FRTS2', 'RIM4*FRTS2', 'RIM5*FRTS2', 'RIU4*FRTS2', 'RIU5*FRTS2', 'RIZ4*FRTS2', 'RLH4*FRTS2', 'RMH4*FRTS2', 'RMM4*FRTS2', 'RMU4*FRTS2', 'RNH4*FRTS2', 'RNH5*FRTS2', 'RNH6*FRTS2', 'RNM4*FRTS2', 'RNM5*FRTS2', 'RNM6*FRTS2', 'RNU4*FRTS2', 'RNU5*FRTS2', 'RNZ4*FRTS2', 'RNZ5*FRTS2', 'RTH4*FRTS2', 'SAH4*FRTS2', 'SAK4*FRTS2', 'SEH4*FRTS2', 'SFH4*FRTS2', 'SFM4*FRTS2', 'SFU4*FRTS2', 'SGH4*FRTS2', 'SNH4*FRTS2', 'SOH4*FRTS2', 'SPH4*FRTS2', 'SRH4*FRTS2', 'SRM4*FRTS2', 'SRU4*FRTS2', 'SSH4*FRTS2', 'SVH4*FRTS2', 'SVM4*FRTS2', 'SVU4*FRTS2', 'SXH4*FRTS2', 'SXM4*FRTS2', 'SXU4*FRTS2', 'SZH4*FRTS2', 'SZM4*FRTS2', 'SZU4*FRTS2', 'SiH4*FRTS2', 'SiH5*FRTS2', 'SiM4*FRTS2', 'SiM5*FRTS2', 'SiU4*FRTS2', 'SiU5*FRTS2', 'SiZ4*FRTS2', 'SuF4*FRTS2', 'SuG4*FRTS2', 'SuH4*FRTS2', 'SuJ4*FRTS2', 'TRH4*FRTS2', 'TTH4*FRTS2', 'TTM4*FRTS2', 'TYH4*FRTS2', 'TYM4*FRTS2', 'TYU4*FRTS2', 'UCH4*FRTS2', 'UCM4*FRTS2', 'USDRUBF*FRTS2', 'VBH4*FRTS2', 'VBM4*FRTS2', 'W4F4*FRTS2', 'W4G4*FRTS2', 'W4H4*FRTS2', 'W4J4*FRTS2', 'W4K4*FRTS2', 'W4M4*FRTS2', 'W4N4*FRTS2', 'W4Q4*FRTS2', 'W4U4*FRTS2', 'WUH4*FRTS2', 'WUM4*FRTS2', 'WUU4*FRTS2', 'YNH4*FRTS2', 'W4V4*FRTS2', 'NGJ4*FRTS2', 'VKH4*FRTS2', 'VKM4*FRTS2', 'VKU4*FRTS2', 'BRX4*FRTS2', 'CoG4*FRTS2', 'VIF4*FRTS2', 'SuK4*FRTS2', 'POH4*FRTS2', 'IMOEXF*FRTS2', 'TNH4*FRTS2', 'W4X4*FRTS2', 'RBM4*FRTS2', 'NGK4*FRTS2', 'BRZ4*FRTS2', 'CoH4*FRTS2', 'FVH4*FRTS2', 'TIH4*FRTS2', 'OZH4*FRTS2', 'CHM4*FRTS2', 'HYM4*FRTS2', 'LKZ4*FRTS2', 'MTU4*FRTS2', 'NKM4*FRTS2', 'PZM4*FRTS2', 'SPM4*FRTS2', 'SRZ4*FRTS2', 'SNM4*FRTS2', 'TTU4*FRTS2', 'VBU4*FRTS2', 'RTM4*FRTS2', 'FSM4*FRTS2', 'SGM4*FRTS2', 'RLM4*FRTS2', 'MNU4*FRTS2', 'MEM4*FRTS2', 'ALU4*FRTS2', 'AFU4*FRTS2', 'MGM4*FRTS2', 'AKM4*FRTS2', 'IRM4*FRTS2', 'POM4*FRTS2', 'PIM4*FRTS2', 'HOU4*FRTS2', 'MCM4*FRTS2', 'PHM4*FRTS2', 'SOM4*FRTS2', 'SSM4*FRTS2', 'SEM4*FRTS2', 'PSM4*FRTS2', 'HSZ4*FRTS2', 'DXZ4*FRTS2', 'N2Z4*FRTS2', 'BEZ4*FRTS2', 'FLZ4*FRTS2', 'SZZ4*FRTS2', 'WUZ4*FRTS2', 'BNZ4*FRTS2', 'BSZ4*FRTS2', 'CMZ4*FRTS2', 'KMZ4*FRTS2', 'MVZ4*FRTS2', 'VKZ4*FRTS2', 'EDU4*FRTS2', 'GDZ4*FRTS2', 'PDU4*FRTS2', 'PTU4*FRTS2', 'SVZ4*FRTS2', 'AUM4*FRTS2', 'GUM4*FRTS2', 'MXZ4*FRTS2', 'CFM4*FRTS2', 'JPM4*FRTS2', 'VIG4*FRTS2', 'CAM4*FRTS2', 'TRM4*FRTS2', 'CSM4*FRTS2', 'FNM4*FRTS2', 'MAM4*FRTS2', 'OGM4*FRTS2', 'CRM5*FRTS2', 'TYZ4*FRTS2', 'AEZ4*FRTS2', 'ISM4*FRTS2', 'GLZ4*FRTS2', 'SFZ4*FRTS2', 'NAZ4*FRTS2', 'SuM4*FRTS2', 'S0H4*FRTS2', 'S0M4*FRTS2', 'ASM4*FRTS2', 'ASH4*FRTS2', 'EuM5*FRTS2', 'SiZ5*FRTS2', 'MMH7*FRTS2', 'RMZ4*FRTS2', 'NGM4*FRTS2', 'BRF5*FRTS2', 'ARZ4*FRTS2']

# print(d)
#  сортирует словарь по значениям
def sortdict(dict) :
	keys = list(dict.keys())
	values = list(dict.values())
	sorted_value_index = argsort(values)
	return {keys[i]: values[i] for i in sorted_value_index}

def get_fut(spinst):
	name = infopath + '\\' + str(year) + '\\' + str(month) + '\\' + str(day) + '.roman'
	a = myload(name)
	d = {}
	for key in a:
		if a[key]['exchange'] == 'ФОРТС':
			d[key] = a[key]['expiration_time']
	del (a)
	# print(d)
	# quit()

	pred=dict()
	dinst=[]
	instset=set()
	for inst in spinst:
		dinst.append(inst)
		bodyit = inst[:inst.find('*')-2]
		instset.add(bodyit)
	# print(instset)
	for i in instset:
		pred[i] = dict()
		for inst in spinst:
			bodyit = inst[:inst.find('*')-2]
			if i == bodyit:
				# print(i,instset)
				# print(inst,bodyit)
				pred[i][inst]=d[inst[:inst.find('*')]]
	pred2=dict()
	for key in pred:
		pred2[key]=[]
		pred[key]= sortdict(pred[key])
	for key in pred2:
		for key2 in pred[key]:
			pred2[key].append(key2)

	# брать список с минимум 2 инструментами
	pred3=pred2.copy()
	for key in pred2:
		if len(pred2[key])==1:
			# print(key,   '     ',len(pred2[key]))
			dinst.remove(pred3[key][0])
			del pred3[key]
	# добавим вечные фьючи
	# 'USDRUBF 'IMOEXF 'GLDRUBF    'EURRUBF  Si MX  GD   Eu
	dinst.append('USDRUBF*FRTS2')
	dinst.append('IMOEXF*FRTS2')
	dinst.append('GLDRUBF*FRTS2')
	dinst.append('EURRUBF*FRTS2')
	pred3['Si'].insert(0,'USDRUBF*FRTS2')
	pred3['MX'].insert(0, 'IMOEXF*FRTS2')
	pred3['GD'].insert(0, 'GLDRUBF*FRTS2')
	pred3['Eu'].insert(0, 'EURRUBF*FRTS2')
	# добавим форекс
	pred3['GD'].append('XAUUSD*FxMETBR')
	pred3['SV'].append('XAGUSD*FxMETBR')
	pred3['BR'].append('Brent*FxMETBR')
	pred3['BR'].append('Crude*FxMETBR')
	pred3['NG'].append('NatGas*FxMETBR')
	pred3['Si'].append('USDind*FxMETBR')
	# добавим валютку   CURcross
	pred3['Si'].append('USDRUB*CURcross')
	pred3['Si'].append('USDRUR*CURcross')
	pred3['Si'].append('USDRUB_TMS*CURcross')
	pred3['Eu'].append('EURRUB*CURcross')
	pred3['Eu'].append('EURRUR*CURcross')
	pred3['Eu'].append('EURRUB_TMS*CURcross')

	# добавим валютку   CUR
	pred3['Si'].append('USD000UTSTOM*CUR')
	pred3['Si'].append('USD000000TOD*CUR')
	pred3['Eu'].append('EURUSD000TOM*CUR')
	pred3['Eu'].append('EURUSD000TOD*CUR')
	pred3['Eu'].append('EUR_RUB__TOM*CUR')
	pred3['Eu'].append('EUR_RUB__TOD*CUR')

	# добавим сырье
	pred3['GD'].append('Золото*RAW')
	pred3['GD'].append('Платина*RAW')
	pred3['GD'].append('Медь*RAW')
	pred3['SV'].append('Серебро*RAW')
	pred3['BR'].append('Нефть WTI*RAW')
	pred3['BR'].append('Нефть Brent*RAW')
	pred3['BR'].append('Мазут*RAW')
	pred3['BR'].append('Бензин*RAW')
	pred3['NG'].append('Природный газ*RAW')
	pred3['W4'].append('Пшеница*RAW')

	# добавим америку



	# Медь
	# Золото
	# Никель
	# Пшеница
	# Платина
	# Алюминий
	# Палладий
	# Нефть
	# Brent
	# Серебро
	# Природный
	# газ
	# Мазут
	# Бензин
	# Свинец
	# Олово
	# Нефть
	# WTI








	return (d,dinst,pred3)

D,A, B = get_fut(spis)

# print(A) #какие фьючи торгуем
print(B)


