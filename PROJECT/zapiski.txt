# Переделать все в разреженные массивы пандас упаковать используя Метод to_pickle()

# прописать  условия входа и выхода из сделок, создать словари где прописывается тип сделки (бай опен, бай клоуз,селопен,
# селлклоуз) цена сделки, объем аск или бид , время   ,  снапшот стакана во время сделки)
# для каждого файла  использовать мап синх, спаять результаты в конце  в словарь, вкатать словарь в файл для дальнейшей
# визуализации
# Переиграем. Каждая покупка и продажа записывается, а в постобработке уже определяется, что опен что клоуз
# так же пишется средний медианный объем по стакану  и средний спред.
# Односторонние сделки пишутся не чаще чем через  Н минут при условии что цена входа не совпадает с предыдущей

# сигнальная функция - получает входные параметры + стакан, возвращает только бай, селл, байклоуз, селлклоуз
# а лучше, получает котировки!
# Сперва простой патерн.

# Вход на смещении...
# Настройки - либо имеющийся объем    ( макс ограничен медиан*коэф)
# либо медианный с коэфом
# либо определенный по сумме.
# - считать средний спред,
# не принимать в расчет средней котиры со спредом в 10 или Н раз больше среднего -считать предыд    под вопросом...это
# -считать среднюю и в основе - отклонение инстр от средней
# Стреляем несколькими медианными объемами в сторону расхождения - вход на инстр со сбольшим смещением
# Работать только по заявкам которые можно забрать целиком
# Добавить возможность эмулирования неполного набора/закрытия  позиции с последующим добором/закрытием - для проверки
# эффективности работы по объемам - -приблизительно. Не закрывать по цене прошлого неполного закрытия.
# Проверить условие закрытия "только когда можно закрыть весь объём".
# Разнесённый по времени вход в сделку . Т.е взодим частями при сигнале не менее чем т времени
# старая классика - вход только с первого раза на объем, который получился.
#  уберем селлклоуз и байклоуз - сделаем симметрию для простоты
# ввести в отчет процент недобора позиции при закрытии
#  все же для учета контанго применить экстраполляцию спреда
# Тестирование самообучающейся модели.
/////////////////////////////////////////////
/////////////////////////////////////////////
/////////////////////////////////////////////
/////////////////////////////////////////////
/////////////////////////////////////////////
/////////////////////////////////////////////
 # Тезисы - мозг штурм асинхронный
# 		Самая флетовая средняя - это средняя , у которой показатель период/(СКО+комис) самый высокий
# волатильность средней равна СКО- идеальный тренд
# А что если ско брать не по модулю. чем ближе такой СКО к средней - тем флетовее средняя . Такое СКО- это есть суперсредняя, те первая производная от средней
# точнее, не СКО, а среднее отклонение СО
# но волу средней нужно выводить по любому
#  сравнить простое среднее с экспонетной в плане простое примерно равно экспонец. с периодом вдвое меньше
#  простое для производительности считать через очередь с корректировкой на новую и крайнюю
# простое медленнее, но не имеет долгой памяти - защита от случайноко выброса в истории (хотя если много выбросов- лучше медиана)
# если параметры волы средней и СО соответствуют флету, СО считать от суперсредней- - избавит от микротренда а ля контанго
# проверить всё на синусоиде с подмешиванием тренда, визуализировать сделки. Скорее всего, придется юзать суперсреднюю и её волу
# проверить гипотезу - предельный профитный параметр - когда СО по суперсредней касается средней. и вола суперсредней равна её ско.
# Вместо медианы можно использовать фильтр -ввести вспомогательну среднюю и игнорить тройное ско в расчете основной. будет бысрей при большом периоде.
# скорей всего, правильнее будет считать СО по минимумам ак-бид, а не по аск+бид/2  или максимумам  - проверить на аск/бид синусоиде
#  но это в спреде будет неадекватно- уменьшаться при росте волы в пределах спреда
#  или профитней - на искусственной синусоиде, в рынке -лучше (аск+бид)/2
#  вывести СО, являющиеся минимумумом профитности при данной воле средней... так. индикативно - не обязательно

#  Матожидание регулировать задаваемым запасом по издержками с множителем или задаваемыми абсолютна -т.е с форой - это минимум СО
# вхлд в позицию кода цена превышает фору и когда СО превышает фору,лучше когда (фора-СО)/2 больше форы и вход по (фора-СО)/2
#  а может, к СО добавить (лучше отнять (чтобы ушла ниже форы)) волатильность средней и уже тогда входить  по (фора-СО)/2?  -решит проблему торга внутри спреда
#  да уж. если среднее отклонение от суперсредней  совпадает со средним отклонением от средней - тогда ОК но при кекоторыз условиях выше
# проверить совпадение отклонений при резком пересечении при смене тренда - если не совпадает, тогда ок, иначе придется юзать волу средней

# вола по инструменту нужна - входить если ведущие пробили, если нет - не входить

# несколько окон с графиками https://stackru.com/questions/58638228/spyder-plotly-neskolko-grafikov-v-odnom-okne-brauzera
# https://plotly.com/python/subplots/
# https://habr.com/ru/articles/502958/
# https://plotly.com/python/marker-style/
# https://qwertybox.ru/articles/39244/

# from plotly.subplots import make_subplots
# import plotly.graph_objects as go
#
# fig = make_subplots(rows=3, cols=2)
#
# fig.add_trace(go.Scatter( x=[3, 4, 5],     y=[1000, 1100, 1200],), row=1, col=1)
#
# fig.add_trace(go.Scatter(  x=[2, 3, 4], y=[100, 110, 120],), row=2, col=2)
#
# fig.add_trace(go.Scatter( x=[0, 1, 2], y=[10, 11, 12]), row=3, col=1)

# fig.update_layout(height=1000, width=1000, title_text="Stacked Subplots")
# fig.update_layout(height=1000, width=1000, title_text="Stacked Subplots")
# fig.show()